openapi: "3.0.0"

# スキーマの情報
info:
  title: Reminder API Document
  version: "0.0.1"
  description: Reminder API のドキュメント

# サーバ情報
servers:
  - url: http://localhost:8080

# エンドポイント
paths:
  /reminders/:
    get:
      summary: "リマインダー一覧取得"
      description: "リマインダーの一覧取得をします"
      operationId: "getReminderList"
      parameters:
        - name: limit
          in: query
          required: true
          description: "リストに含まれるリソースの最大値"
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          required: true
          description: "オフセット"
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReminderListDTO"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
    post:
      summary: "リマインダー作成"
      description: "リマインダーの新規作成"
      operationId: "createReminder"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReminderForm"
      responses:
        "201":
          description: "created"
          headers:
            location:
              description: "作成されたリソースのURI"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReminderDTO"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
  /reminders/{id}:
    get:
      summary: "タスク取得"
      description: "指定されたIDのリマインダーを1件取得"
      operationId: "getReminder"
      parameters:
        - name: "id"
          in: path
          required: true
          description: "リマインダーを取得する一意ID"
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReminderDTO"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"

# 再利用可能なスキーマ定義
components:
  schemas:
    ReminderForm:
      type: object
      properties:
        title:
          type: string
          description: "タイトル"
          minLength: 1
          maxLength: 256
        description:
          type: string
          description: "詳細"
        dueDate: # <xxxx-xx-xx>形式の正規表現が上手く機能しないため、バリデーションはクライアントサイドのみとする
          type: string
          format: date
          description: "期限"
        priority:
          type: integer
          description: "優先度"
          minimum: 0
          maximum: 2
        isCompleted: # 現状、<true> or <false>だけを許容するバリデーション方法がわからないため、バリデーションはクライアントサイドのみとする
          type: boolean
          description: "完了/未完了"
      required:
        - title
        - description
        - dueDate
        - priority
        - isCompleted
    ReminderDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "一意ID"
        title:
          type: string
          description: "タイトル"
        description:
          type: string
          description: "詳細"
        dueDate:
          type: string
          format: date
          description: "期限"
        priority:
          type: integer
          description: "優先度"
        isCompleted:
          type: boolean
          description: "完了/未完了"
        createdAt:
          type: string
          format: date-time
          description: "作成日"
        updatedAt:
          type: string
          format: date-time
          description: "更新日"
      required:
        - id
        - title
        - description
        - dueDate
        - priority
        - isCompleted
        - createdAt
        - updatedAt
    PageDTO:
      description: "ページング情報"
      type: object
      properties:
        limit:
          description: "リクエストされた limit"
          type: integer
          format: int32
        offset:
          description: "リクエストされた offset"
          type: integer
          format: int64
        size:
          description: "取得できた件数"
          type: integer
          format: int32
      required:
        - limit
        - offset
        - size
    ReminderListDTO:
      type: object
      properties:
        page:
          $ref: "#/components/schemas/PageDTO"
        results:
          type: array
          items:
            $ref: "#/components/schemas/ReminderDTO"
    ResourceNotFoundError:
      description: "指定したリソースが存在しない"
      type: object
      properties:
        title:
          type: string
          description: "エラーのタイトル"
          default: "Resource Not Found"
        detail:
          type: string
          description: "エラーの詳細"
      required:
        - title
        - detail
    BadRequestError:
      description: "不正なリクエスト"
      type: object
      properties:
        title:
          type: string
          description: "エラーのタイトル"
          default: "Bad Request"
        detail:
          type: string
          description: "エラーの詳細"
          default: "リクエストが不正です。正しいリクエストでリトライしてください"
        invalid-params:
          type: array
          items:
            $ref: "#/components/schemas/InvalidParam"
      required:
        - title
        - detail
        - invalid-params
    InvalidParam:
      description: "不正なリクエストの詳細"
      type: object
      properties:
        name:
          type: string
          description: "エラーが発生したフィールド名"
        reason:
          type: string
          description: "エラーが発生した理由"
      required:
        - name
        - reason
