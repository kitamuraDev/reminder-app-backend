plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.openapi.generator" version "6.6.0"
}

group = 'app'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'io.swagger.core.v3:swagger-annotations:2.2.15'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Springコードの生成先ディレクトリ定数
ext.GENERATED_SPRING_CODE_DIR="$buildDir/spring"

// Springのcontrollerやmodelを生成するタスク
task springCodeGen(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	generatorName.set("spring")
	inputSpec.set("$rootDir/src/main/resources/api-schema.yaml")
	outputDir.set("$GENERATED_SPRING_CODE_DIR")
	outputs.dir("$GENERATED_SPRING_CODE_DIR")
	apiPackage.set("reminderapi.controller")
	modelPackage.set("reminderapi.model")
	configOptions.set([
		interfaceOnly: "true",
		useSpringBoot3: "true"
	])
}

// compileJavaを実行する前に、springCodeGenを実行する
compileJava.dependsOn tasks.springCodeGen

// openapi.generatorで生成したコードをアプリケーションコードにimportできるようにする
sourceSets.main.java.srcDir "$buildDir/spring/src/main/java"